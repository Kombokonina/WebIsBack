<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Main Page</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        header {
            background-color: #007bff; 
            color: rgb(255, 255, 255);
            width: 100%;
            padding: 10px 0;
            text-align: center;
        }

        .carousel {
            width: 100%;
            max-width: 100vw;
        }

        .carousel-item img {
            width: 100%; 
            height: auto;
        }

        body {
            background-color: #f4f4f4;
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            flex-direction: column;
            font-family: Arial, sans-serif;
        }

        footer {
            background-color: #007bff; 
            color: white;
            padding: 10px 0;
            text-align: center;
            width: 100%;
        }

        @media (min-width: 768px) {
            .carousel-container {
                display: flex;
                flex-wrap: wrap;
                justify-content: space-between;
            }
            .carousel-container .carousel {
                width: 48%; 
            }
        }
    </style>
</head>
<body>
    <header class="container py-3">
        <div class="d-flex justify-content-between align-items-center">
            <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/5/55/Overwatch_circle_logo.svg/600px-Overwatch_circle_logo.svg.png" alt="Overwatch Logo" height="75">
            <h1>Welcome to the Main Page</h1>
            <div>
                <a href="/weather" class="btn btn-primary mr-2" >Back</a>
                <a href="/admin" class="btn btn-primary mr-2">Admin</a>
                <a href="/logout" class="btn btn-danger">Logout</a>
            </div>
        </div>
    </header>

    <main class="container">
        <!-- Display items here -->
        <% items.forEach(item => { %>
            <div class="card my-3">
                <div id="carousel<%= item._id %>" class="carousel slide" data-ride="carousel">
                    <div class="carousel-inner">
                        <% item.pictures.forEach((picture, index) => { %>
                            <div class="carousel-item <%= index === 0 ? 'active' : '' %>">
                                <img src="<%= picture %>" class="d-block w-100" alt="Slide <%= index + 1 %>">
                            </div>
                        <% }) %>
                    </div>
                    <a class="carousel-control-prev" href="#carousel<%= item._id %>" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#carousel<%= item._id %>" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
                <div class="card-body">
                    <h5 class="card-title"><%= item.names[0].name %></h5>
                    <p class="card-text"><%= item.descriptions[0].description %></p>
                </div>
            </div>
        <% }) %>
    </main>

    <main class="container">
        <!-- Character selection section -->
        <div class="row mt-4">
            <div class="col-md-6 offset-md-3">
                <div class="input-group mb-3">
                    <h2>Overwatch Hero Information</h2>
                    <div class="input-group-prepend">
                        <label class="input-group-text" for="characterSelect">Select Character</label>
                    </div>
                    <select class="custom-select" id="characterSelect">
                        <option selected disabled>Choose...</option>
                        <option value="zenyatta">Zenyatta</option>
                        <option value="reinhardt">Reinhardt</option>
                        <option value="tracer">Tracer</option>
                        <option value="winston">Winston</option>
                        <option value="zarya">Zarya</option>
                        <option value="ana">Ana</option>
                        <option value="bastion">Bastion</option>
                        <option value="brigitte">Brigitte</option>
                        <option value="doomfist">Doomfist</option>
                        <option value="genji">Genji</option>
                        <option value="hanzo">Hanzo</option>
                        <option value="junkrat">Junkrat</option>
                        <option value="lucio">Lucio</option>
                        <option value="cassidy">Cassidy</option>
                        <option value="mei">Mei</option>
                        <option value="mercy">Mercy</option>
                        <option value="moira">Moira</option>
                        <option value="orisa">Orisa</option>
                        <option value="pharah">Pharah</option>
                        <option value="reaper">Reaper</option>
                        <option value="roadhog">Roadhog</option>
                        <option value="soldier-76">Soldier: 76</option>
                        <option value="sombra">Sombra</option>
                        <option value="symmetra">Symmetra</option>
                        <option value="torbjorn">Torbjorn</option>
                        <option value="widowmaker">Widowmaker</option>
                        <option value="wrecking-ball">Wrecking Ball</option>
                        <option value="ashe">Ashe</option>
                        <option value="baptiste">Baptiste</option>
                        <option value="echo">Echo</option>
                        <option value="sigma">Sigma</option>
                        <option value="illari">Illari</option>
                        <option value="junker-queen">Junker Queen</option>
                        <option value="mauga">Mauga</option>
                        <option value="kiriko">Kiriko</option>
                        <option value="ramattra">Ramattra</option>
                        <option value="lifeweaver">Lifeweaver</option>
                        <option value="sojourn">Sojourn</option>
                        <option value="dva">D.va</option>
                    </select>
                </div>
            </div>
        </div>

        <!-- Get Hero Info button -->
        <div class="row mt-2">
            <div class="col-md-6 offset-md-3">
                <button id="getHeroInfoBtn" class="btn btn-primary">Get Hero Info</button>
            </div>
        </div>

        <!-- Character information section -->
        <div id="characterInfo" class="row mt-4">
            <div class="col-md-6 offset-md-3">
            </div>
        </div>

        <!-- Riddles container -->
        <div id="riddlesContainer" class="row mt-4">
            <div class="col-md-12">
                <hr>
                <h2>Riddle of the Day</h2>
                <div id="riddleContent">
                </div>
                <button id="getRiddleBtn" class="btn btn-primary">Get a Riddle</button>
            </div>
        </div>
    </main>

    <footer>
        Developed by Arlen | SE_2205
    </footer>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        // Function to fetch character information and update the UI
        function fetchCharacterInfo(character) {
            fetch(`https://overfast-api.tekrop.fr/heroes/${character}?locale=en-us`)
                .then(response => response.json())
                .then(data => {
                    // Update the UI with character information
                    const characterInfoContainer = document.getElementById('characterInfo');
                    characterInfoContainer.innerHTML = `
                        <div class="col-md-12">
                            <h2>${data.name}</h2>
                            <img src="${data.portrait}" alt="${data.name}" class="img-fluid mb-3">
                            <p><strong>Description:</strong> ${data.description}</p>
                            <p><strong>Role:</strong> ${data.role}</p>
                            <p><strong>Location:</strong> ${data.location}</p>
                            <p><strong>Hitpoints:</strong></p>
                            <ul>
                                <li>Shields: ${data.hitpoints.shields}</li>
                                <li>Health: ${data.hitpoints.health}</li>
                                <li>Armor: ${data.hitpoints.armor}</li>
                                <li>Total: ${data.hitpoints.total}</li>
                            </ul>
                            <h3>Abilities:</h3>
                            <ul>
                                ${data.abilities.map(ability => `<li><strong>${ability.name}:</strong> ${ability.description}</li>`).join('')}
                            </ul>
                        </div>
                    `;
                })
                .catch(error => console.error('Error fetching character information:', error));
        }

        // Event listener for when a character is selected
        document.getElementById('characterSelect').addEventListener('change', function () {
            const selectedCharacter = this.value;
            if (selectedCharacter !== 'Choose...') {
                fetchCharacterInfo(selectedCharacter);
            }
        });

        // Event listener for Get Hero Info button click
        document.getElementById('getHeroInfoBtn').addEventListener('click', function () {
            const selectedCharacter = document.getElementById('characterSelect').value;
            if (selectedCharacter !== 'Choose...') {
                fetchCharacterInfo(selectedCharacter);
            }
        });

        // Event listener for Get a Riddle button click
        document.getElementById('getRiddleBtn').addEventListener('click', function () {
            fetchNewRiddle();
        });

        // Function to fetch and display a new riddle
        function fetchNewRiddle() {
            fetch('https://riddles-api.vercel.app/random')
                .then(response => response.json())
                .then(data => {
                    const riddleContent = document.getElementById('riddleContent');
                    riddleContent.innerHTML = `
                        <p><strong>Riddle:</strong> ${data.riddle}</p>
                        <p><strong>Answer:</strong> ${data.answer}</p>
                    `;
                })
                .catch(error => console.error('Error fetching riddle:', error));
        }
</script>
</body>
</html>
